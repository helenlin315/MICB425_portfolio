#DAY2
library(tidyverse)
#Looking at oxygen in water samples
metadata %>%
select(O2_uM)
#Looking at oxygen in water samples, name it oxygen =
oxygen = metadata %>%
select(O2_uM)
#select all variables that contain "O2" or "oxygen"
metadata %>%
select(matches("O2|oxygen"))
#Filter means selecting for rows (samples) where oxygen = 0
metadata %>%
filter(O2_uM == 0)
# Selecting rows
metadata %>%
filter(O2_uM == 0) %>%
select(Depth_m)
metadata %>%
filter(CH4_uM > 100) %>%
filter(Temerature_C < 10) %>%
select(Depth_m)
metadata %>%
filter(NH4_uM > 100) %>%
filter(Temerature_C < 10) %>%
select(Depth_m)
metadata %>%
filter(NH4_nM > 100) %>%
filter(Temerature_C < 10) %>%
select(Depth_m)
metadata %>%
filter(CH4_nM > 100) %>%
filter(Temerature_C < 10) %>%
select(Depth_m)
metadata %>%
filter(CH4_nM > 100) %>%
filter(Temperature_C < 10) %>%
select(Depth_m)
select(Depth_m)
filter(Temperature_C < 10) %>%
select(Depth_m)
metadata %>%
filter(Temperature_C < 10) %>%
select(Depth_m)
#Using dplyr, find at what depth(s) methane (CH4) is above 100 nM while temperature is below 10 °C. Print out a table showing only the depth, methane, and temperature data.
metadata %>%
filter(CH4_nM > 100) %>%
filter(Temperature_C < 10) %>%
select(Depth_m)
metadata %>%
filter(matches("CH4_nM&Temperature_C"))
metadata %>%
select(CH4_nM, Temperature_C, Depth_m) %>%
filter(CH4_nM > 100) %>%
filter(Temperature_C < 10) %>%
metadata %>%
select(CH4_nM, Temperature_C, Depth_m) %>%
filter(CH4_nM > 100, Temperature_C < 10)
metadata %>%
select(CH4_nM, Temperature_C, Depth_m) %>%
filter(CH4_nM > 100, Temperature_C < 10)
metadata %>%
filter(CH4_nM >100) %>%
filter(Temperature_C < 10) %>%
select(Depth_m, CH4_nM, Temperature_C)
metadata %>%
mutate(N2O_uM = N2O_nM/1000)
metadata %>%
mutate(N2O_uM = N2O_nM/1000)
library(tidyverse)
metadata %>%
mutate(N2O_uM = N2O_nM/1000)
metadata %>%
transmute(N2O_nM = N2O_nM/1000)
metadata %>%
mutate(N2O_uM = N2O_nM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=N2O_uM))
metadata %>%
select(matches("nM")) %>%
head()
metadata %>%
mutate(N2O_uM = N2O_nM/1000,
Std_N2O_uM = Std_N2O_nM/1000,
CH4_uM = CH4_nM/1000,
Std_CH4_uM = Std_CH4_nM/1000) %>%
select(N2O_nM, N2O_uM,
Std_N2O_nM, Std_N2O_uM,
CH4_nM, CH4_uM,
Std_CH4_nM ,Std_CH4_uM)
library(tidyverse)
biocLite("phyloseq")
source("https://bioconductor.org/biocLite.R")
biocLite("phyloseq")
library(phyloseq)
load("phyloseq_object.RData")
load("phyloseq_object.RData")
#Dot plot without data
ggplot(metadata, aes(x=O2_uM, y=Depth_m))
#To add in the data, we must specify a geom
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
#Code down below is same as line 13
ggplot(metadata) +
geom_point(aes(x=O2_uM, y=Depth_m))
#Can change colour
ggplot(metadata, aes(x=O2_uM, y=Depth_m, color="blue")) +
geom_point()
#But this gives red - we need to put attributes in geom_point because it actually gives you the data points
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point(color="blue")
View(physeq)
View(physeq)
View(physeq)
View(physeq)
#Also applies to shapes and sizes
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point(shape="square")
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point(size=10)
#oxygen measurement in volts correlates with measurements in μM?
ggplot(metadata, aes(x=O2_uM, y=Depth_m, size=OxygenSBE_V)) +
geom_point()
View(oxygen)
View(metadata)
#Exercise 1 - plot PO4 against Depth (purple triangles)
ggplot(metadata, aes(x=PO4_uM, y=Depth_m)) +
geom_point(color="blue", shape="triangle")
#Exercise 1 - plot PO4 against Depth (purple triangles)
ggplot(metadata, aes(x=PO4_uM, y=Depth_m)) +
geom_point(color="blue", shape="17")
#Exercise 1 - plot PO4 against Depth (purple triangles)
ggplot(metadata, aes(x=PO4_uM, y=Depth_m)) +
geom_point(shape="square")
#Also applies to shapes and sizes
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point(shape="square")
#Exercise 1 - plot PO4 against Depth (purple triangles)
ggplot(metadata, aes(x=PO4_uM, y=Depth_m)) +
geom_point(shape="triangle")
#Exercise 1 - plot PO4 against Depth (purple triangles)
ggplot(metadata, aes(x=PO4_uM, y=Depth_m)) +
geom_point(shape=24, color="purple")
#Exercise 1 - plot PO4 against Depth (purple triangles)
ggplot(metadata, aes(x=PO4_uM, y=Depth_m)) +
geom_point(shape=24, fill="purple", color="purple")
#Exercise 1 - plot PO4 against Depth (purple triangles)
ggplot(metadata, aes(x=NH4_uM, y=Depth_m)) +
geom_point(shape=24, fill="purple", color="purple")
#Exercise 2 - Celsius to Farenheit
metadata %>%
mutate(Temperature_F = (Temperature_C*1.8)+32)
ggplot(metadata, aes(x=Temperature_F, y=Depth_m)) +
geom_point()
#Exercise 2 - Celsius to Farenheit
metadata %>%
mutate(Temperature_F = (Temperature_C*1.8)+32) %>%
ggplot(metadata, aes(x=Temperature_F, y=Depth_m)) +
geom_point()
#Exercise 2 - Celsius to Farenheit
metadata %>%
mutate(Temperature_F = (Temperature_C*1.8)+32) %>%
ggplot() + geom_point(metadata, aes(x=Temperature_F, y=Depth_m))
#Exercise 2 - Celsius to Farenheit
metadata %>%
mutate(Temperature_F = (Temperature_C*1.8)+32) %>%
ggplot() + geom_point(aes(x=Temperature_F, y=Depth_m))
#Phyloseq - alpha- and beta-diversity analyses as well as visualization of sequencing data
phyloseq
#Phyloseq - alpha- and beta-diversity analyses as well as visualization of sequencing data
physeq
#functions mirror ggplot like plot_bar = geom_bar.
#plot the phylum level communities by depth by simply specifying the fill.
plot_bar(physeq, fill="Phylum")
#Calculate percentage of total of each sample using transform_sample_counts
physeq_percent = transform_sample_counts(physeq, function(x) 100 * x/sum(x))
#Then plot the phyla, see 0-100% for all samples
plot_bar(physeq_percent, fill="Phylum")
#Then plot the phyla, see 0-100% for all samples
plot_bar(physeq_percent, fill="Phylum")
#To remove separating lines and for R to no longer see OTUs as separate data by specifying stat as "identity"
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity")
View(physeq)
#To remove separating lines and for R to no longer see OTUs as separate data by specifying stat as "identity"
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity")
plot_bar(physeq_percent, fill="Family") +
geom_bar(aes(fill=family, x="Sample depth", y="Percent relative abundance", title="Family from 10 to 200 m in Saanich Inlet"), stat="identity")
plot_bar(physeq_percent, fill="Family") +
geom_bar(aes(fill=family), stat="identity")
plot_bar(physeq_percent, fill="phylum") +
geom_bar(aes(fill=phylum), stat="identity") + labs(x = "Sample depth", y = "Percent relative abundance", title = "Phyla from 10 to 200 m in Saanich Inlet")
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity") + labs(x = "Sample depth", y = "Percent relative abundance", title = "Phyla from 10 to 200 m in Saanich Inlet")
plot_bar(physeq_percent, fill="Family") +
geom_bar(aes(fill=Family), stat="identity") + labs(x = "Sample depth", y = "Percent relative abundance", title = "Phyla from 10 to 200 m in Saanich Inlet")
plot_bar(physeq_percent, fill="Kingdom") +
geom_bar(aes(fill=Kingdom), stat="identity") + labs(x = "Sample depth", y = "Percent relative abundance", title = "Kingdom from 10 to 200 m in Saanich Inlet")
plot_bar(physeq_percent, fill="Domain") +
geom_bar(aes(fill=Domain), stat="identity") + labs(x = "Sample depth", y = "Percent relative abundance", title = "Domain from 10 to 200 m in Saanich Inlet")
#Faceting - separate into multiple panels (or facets) to see patterns by adding "face_wrap" and tell it what variable to separate by
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity") +
facet_wrap(~Phylum)
#Let R scale y-axes independently with "scales" parameter and remove legend in "theme"
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity") +
facet_wrap(~Phylum, scales="free_y") +
theme(legend.position="none")
View(metadata)
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
ggplot(metadata, x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
ggplot(metadata, aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
ggplot() + geom_point(metadata, aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
#Try something else
metadata %>%
gather(Sample, Depth_m, O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)
#Try something else
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
gather(Sample, Depth_m, O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)
#Try something else
metadata %>%
mutate(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
gather(Sample, Depth_m, O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM) %>%
ggplot() + geom_point(aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
#Try something else
metadata %>%
transmute(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
gather(Sample, Depth_m, O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM) %>%
ggplot() + geom_point(aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(~O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM, scales="free_y") +
theme(legend.position="none")
#Try something else
metadata %>%
transmute(NO2_nM = NO2_uM/1000, O2_nM = O2_uM/1000, PO4_nM = PO4_uM/1000, SiO2_nM = SiO2_uM/1000, NO3_nM = NO3_uM/1000, NH4_nM = NH4_uM/1000) %>%
gather(Sample, Depth_m, O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM) %>%
ggplot() + geom_point(aes(x=Depth_m, y=O2_nM, PO4_nM, SiO2_nM, NO3_nM, NH4_nM, NO2_nM)) +
facet_wrap(uM ~ Depth_m, scales="free_y") +
theme(legend.position="none")
metadata %>%
gather(Nutrient, uM, NH4_uM, NO2_uM, NO3_uM, O2_uM, PO4_uM, SiO2_uM) %>%
ggplot(aes(x=Depth_m, y=uM))+
geom_point() +
geom_line() +
facet_wrap(~Nutrient, scales="free_y") + theme(legend.position="none")
plot_bar(physeq_percent, fill="Domain") +
geom_bar(aes(fill=Domain), stat="identity") + labs(x = "Sample depth", y = "Percent relative abundance", title = "Domain from 10 to 200 m in Saanich Inlet")
#Exercise 2 - Celsius to Farenheit
metadata %>%
mutate(Temperature_F = (Temperature_C*1.8)+32) %>%
ggplot() + geom_point(aes(x=Temperature_F, y=Depth_m))
#Exercise 1 - plot NH4 against Depth (purple triangles)
ggplot(metadata, aes(x=NH4_uM, y=Depth_m)) +
geom_point(shape=24, fill="purple", color="purple")
#Downloading data
load("phyloseq_object.RData")
metadata <- read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t")
library(ggplot2)
library(tidyr)
library(tidyverse)
library(phyloseq)
metadata = read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t")
library(phyloseq)
library(tidyverse)
library(phyloseq)
library(tidyverse)
library(phyloseq)
metadata = read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t")
load("phyloseq_object.RData")
physeq_percent = transform_sample_counts(physeq, function(x) 100 * x/sum(x))
library(tidyverse)
library(phyloseq)
load("phyloseq_object.RData")
physeq_percent = transform_sample_counts(physeq, function(x) 100 * x/sum(x))
library(tidyverse)
library(phyloseq)
metadata = read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t")
load("phyloseq_object.RData")
physeq_percent = transform_sample_counts(physeq, function(x) 100 * x/sum(x))
metadata %>%
gather(Nutrient, uM, NH4_uM, NO2_uM, NO3_uM, O2_uM, PO4_uM, SiO2_uM) %>%
ggplot(aes(x=Depth_m, y=uM))+
geom_point() +
geom_line() +
facet_wrap(~Nutrient, scales="free_y") + theme(legend.position="none")
summary(cars)
library(tidyverse)
library(phyloseq)
load("phyloseq_object.RData")
metadata <- read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t")
library(ggplot2)
library(dplyr)
library(phyloseq)
library(tidyr)
metadata <- read.table(file="Saanich.metadata copy.txt", header=TRUE, row.names=1, sep="\t")
library(ggplot2)
library(dplyr)
library(phyloseq)
library(tidyr)
